name: 'Send Event'
description: 'Sends a custom event to a repository'
inputs:
  event-type:
    description: 'The event type to send'
    required: true
    default: 'custom-event'
  payload:
    description: 'The payload to send'
    required: false
  repository:
    description: 'The repository to send the event to (defaults to the current repository)'
    required: false
    default: ${{ github.repository }}
runs:
  using: "composite"
  steps:
    - name: Install ajv-cli
      shell: bash
      run: npm install ajv-cli

    - name: Create temporary payload file
      shell: bash
      id: payload-file
      run: |
        TEMP_FILE=$(mktemp /tmp/payload-XXXXXX.json)
        echo "$PAYLOAD" > "$TEMP_FILE"
        echo "file=$TEMP_FILE" >> $GITHUB_OUTPUT
      env:
        PAYLOAD: ${{ inputs.payload }}

    - name: Validate payload
      shell: bash
      run: |
        npx ajv-cli validate -s "$SCHEMA" -d "$PAYLOAD_FILE"
      env:
        SCHEMA: ${{ github.action_path }}/schema/${{ inputs.event-type }}.json
        PAYLOAD_FILE: ${{ steps.payload-file.outputs.file }}

    - name: Enrich payload with repo info
      shell: bash
      id: enrich-payload
      run: |
        # Enrich the payload with repository context information
        jq \
          --arg repo "$GITHUB_REPOSITORY" \
          --arg ref "$GITHUB_REF" \
          --arg sha "$GITHUB_SHA" \
          --arg actor "$GITHUB_ACTOR" \
          --slurpfile orig "$PAYLOAD_FILE" \
          '{ "context": { "repository": $repo, "ref": $ref, "sha": $sha, "actor": $actor }, payload: $orig[0] }' \
          "$PAYLOAD_FILE" > "$PAYLOAD_FILE.enriched"
          ENRICHED_PAYLOAD=$(cat "$PAYLOAD_FILE.enriched")
          echo "content=$ENRICHED_PAYLOAD" >> $GITHUB_OUTPUT
      env:
        PAYLOAD_FILE: ${{ steps.payload-file.outputs.file }}

    - name: Send repository dispatch event
      uses: mauhlik/actions/repository-dispatch@event-actions
      with:
        ${{ insert }}: ${{ inputs }}
        payload: ${{ steps.enrich-payload.outputs.content }}